name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Client Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            client/.gradle/caches
            client/.gradle/wrapper
          key: >
            ${{ runner.os }}-client-gradle-${{ hashFiles('client/**/*.gradle*', 'client/**/gradle-wrapper.properties') }}

      - name: Cache Server Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            server/.gradle/caches
            server/.gradle/wrapper
          key: >
            ${{ runner.os }}-server-gradle-${{ hashFiles('server/**/*.gradle*', 'server/**/gradle-wrapper.properties') }}

      - name: Build Client with Gradle
        run: |
          cd client
          ./gradlew bootJar

      - name: Build Server with Gradle
        run: |
          cd server
          ./gradlew bootJar

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and Start Services
        run: |
          docker-compose up --build -d

      - name: Wait for services to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:8080/health | grep "UP"; then
              echo "Client is up"
              break
            fi
            sleep 5
          done
          for i in {1..10}; do
            if curl -s http://localhost:8081/health | grep "UP"; then
              echo "Server is up"
              break
            fi
            sleep 5
          done

      - name: Run tests
        run: |
          curl -s http://localhost:8080/test-endpoint
          curl -s http://localhost:8081/test-endpoint

      - name: Stop services
        run: |
          docker-compose down
